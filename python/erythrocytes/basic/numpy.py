# from <<python for data analysis>> python2.*
import numpy as np

# The NumPy ndarray: A Multidimensional Array Object

data=np.array([[0.9526, -0.246 , -0.8856], [0.5639, 0.2379, "1"]])

data
# Out[13]: 
# array([['0.9526', '-0.246', '-0.8856'],
#        ['0.5639', '0.2379', '1']], 
#       dtype='|S32')

data.dtype
# Out[14]: dtype('S32')

np.zeros((2,3))
# Out[16]: 
# array([[ 0.,  0.,  0.],
#        [ 0.,  0.,  0.]])

np.zeros((2,3), dtype=int)
# Out[17]: 
# array([[0, 0, 0],
#        [0, 0, 0]])

np.arange(10)
# Out[19]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])

arr=np.array([[1,2,3],[4,5,6]])

arr * arr
# Out[24]: 
# array([[ 1,  4,  9],
#        [16, 25, 36]])

1/arr
# Out[25]: 
# array([[1, 0, 0],
#        [0, 0, 0]])

arr.astype(np.float64)
# Out[26]: 
# array([[ 1.,  2.,  3.],
#        [ 4.,  5.,  6.]])

arrF=arr.astype(np.float64)

1/arrF
# Out[28]: 
# array([[ 1.        ,  0.5       ,  0.33333333],
#        [ 0.25      ,  0.2       ,  0.16666667]])


arrF ** 0.5
# Out[30]: 
# array([[ 1.        ,  1.41421356,  1.73205081],
#        [ 2.        ,  2.23606798,  2.44948974]])

arrF * 0.5
# Out[31]: 
# array([[ 0.5,  1. ,  1.5],
#        [ 2. ,  2.5,  3. ]])



# ##math

 arr=np.random.randn(5,8)
# Out[44]: 
# array([[-0.04986388, -0.39992694,  1.43268728, -1.14616554, -0.27796106,
#          1.29971648, -0.20114557,  0.25316014],
#        [ 0.36363737,  1.66608684,  0.33656599, -0.58050497, -0.70111912,
#         -2.28418876,  0.53625307,  0.36925904],
#        [ 1.05759114, -0.42982661, -1.43074653,  1.38751402,  0.20091082,
#         -0.57925433, -0.26302849,  0.72740971],
#        [ 1.40588636,  0.97058751, -2.10559471,  0.20107354, -0.49799755,
#         -0.91339851, -0.64921948, -0.57799099],
#        [-0.54025686, -1.22491589, -0.69004369,  0.87630857, -0.16437673,
#          0.30755232, -0.41885968,  1.89604621]])

arr.mean()
# Out[46]: -0.020953487310332385

arr.max()
# Out[47]: 1.8960462103756786

arr.sum()
# Out[48]: -0.83813949241329544
















































